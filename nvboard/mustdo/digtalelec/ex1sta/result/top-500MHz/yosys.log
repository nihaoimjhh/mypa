
 /----------------------------------------------------------------------------\
 |  yosys -- Yosys Open SYnthesis Suite                                       |
 |  Copyright (C) 2012 - 2024  Claire Xenia Wolf <claire@yosyshq.com>         |
 |  Distributed under an ISC-like license, type "license" to see terms        |
 \----------------------------------------------------------------------------/
 Yosys 0.44+20 (git sha1 5fb3c0b1d, clang++ 14.0.0-1ubuntu1.1 -fPIC -O3)

-- Executing script file `-' --
[TCL: yosys -import] Command name collision: found pre-existing command `cd' -> skip.
[TCL: yosys -import] Command name collision: found pre-existing command `eval' -> skip.
[TCL: yosys -import] Command name collision: found pre-existing command `exec' -> skip.
[TCL: yosys -import] Command name collision: found pre-existing command `read' -> skip.
[TCL: yosys -import] Command name collision: found pre-existing command `trace' -> skip.

1. Executing Verilog-2005 frontend: /home/jinghanhui/verilogtest/mustdo/ex1sta/vsrc/top.v
Parsing SystemVerilog input from `/home/jinghanhui/verilogtest/mustdo/ex1sta/vsrc/top.v' to AST representation.
Generating RTLIL representation for module `\top'.
Generating RTLIL representation for module `\MuxKeyInternal'.
Generating RTLIL representation for module `\MuxKey'.
Successfully finished Verilog frontend.

2. Executing Verilog-2005 frontend: /home/jinghanhui/yosys-sta/scripts/../nangate45/verilog/blackbox.v
Parsing Verilog input from `/home/jinghanhui/yosys-sta/scripts/../nangate45/verilog/blackbox.v' to AST representation.
Successfully finished Verilog frontend.

3. Executing Verilog-2005 frontend: /home/jinghanhui/yosys-sta/scripts/../nangate45/verilog/cells_clkgate.v
Parsing Verilog input from `/home/jinghanhui/yosys-sta/scripts/../nangate45/verilog/cells_clkgate.v' to AST representation.
Generating RTLIL representation for module `\OPENROAD_CLKGATE'.
Successfully finished Verilog frontend.

4. Executing SYNTH pass.

4.1. Executing HIERARCHY pass (managing design hierarchy).

4.1.1. Analyzing design hierarchy..
Top module:  \top
Used module:     \MuxKey
Used module:         \MuxKeyInternal
Parameter 1 (\NR_KEY) = 4
Parameter 2 (\KEY_LEN) = 2
Parameter 3 (\DATA_LEN) = 2

4.1.2. Executing AST frontend in derive mode using pre-parsed AST for module `\MuxKey'.
Parameter 1 (\NR_KEY) = 4
Parameter 2 (\KEY_LEN) = 2
Parameter 3 (\DATA_LEN) = 2
Generating RTLIL representation for module `$paramod$7c4142ec5efe02ac2b641912058d7ad3c8e770b6\MuxKey'.
Parameter 1 (\NR_KEY) = 2
Parameter 2 (\KEY_LEN) = 1
Parameter 3 (\DATA_LEN) = 1
Parameter 4 (\HAS_DEFAULT) = 0

4.1.3. Executing AST frontend in derive mode using pre-parsed AST for module `\MuxKeyInternal'.
Parameter 1 (\NR_KEY) = 2
Parameter 2 (\KEY_LEN) = 1
Parameter 3 (\DATA_LEN) = 1
Parameter 4 (\HAS_DEFAULT) = 0
Generating RTLIL representation for module `$paramod$cc8abc5003d0a65f92ba65201c870cfd2fad5820\MuxKeyInternal'.

4.1.4. Analyzing design hierarchy..
Top module:  \top
Used module:     $paramod$7c4142ec5efe02ac2b641912058d7ad3c8e770b6\MuxKey
Used module:         \MuxKeyInternal
Parameter 1 (\NR_KEY) = 4
Parameter 2 (\KEY_LEN) = 2
Parameter 3 (\DATA_LEN) = 2
Parameter 4 (\HAS_DEFAULT) = 0

4.1.5. Executing AST frontend in derive mode using pre-parsed AST for module `\MuxKeyInternal'.
Parameter 1 (\NR_KEY) = 4
Parameter 2 (\KEY_LEN) = 2
Parameter 3 (\DATA_LEN) = 2
Parameter 4 (\HAS_DEFAULT) = 0
Generating RTLIL representation for module `$paramod$c44997bd4209540e6eefebce7e7612707e0ddf71\MuxKeyInternal'.

4.1.6. Analyzing design hierarchy..
Top module:  \top
Used module:     $paramod$7c4142ec5efe02ac2b641912058d7ad3c8e770b6\MuxKey
Used module:         $paramod$c44997bd4209540e6eefebce7e7612707e0ddf71\MuxKeyInternal

4.1.7. Analyzing design hierarchy..
Top module:  \top
Used module:     $paramod$7c4142ec5efe02ac2b641912058d7ad3c8e770b6\MuxKey
Used module:         $paramod$c44997bd4209540e6eefebce7e7612707e0ddf71\MuxKeyInternal
Removing unused module `$paramod$cc8abc5003d0a65f92ba65201c870cfd2fad5820\MuxKeyInternal'.
Removing unused module `\OPENROAD_CLKGATE'.
Removing unused module `\MuxKey'.
Removing unused module `\MuxKeyInternal'.
Removed 4 unused modules.
Mapping positional arguments of cell $paramod$7c4142ec5efe02ac2b641912058d7ad3c8e770b6\MuxKey.i0 ($paramod$c44997bd4209540e6eefebce7e7612707e0ddf71\MuxKeyInternal).
Mapping positional arguments of cell top.i0 ($paramod$7c4142ec5efe02ac2b641912058d7ad3c8e770b6\MuxKey).

4.2. Executing PROC pass (convert processes to netlists).

4.2.1. Executing PROC_CLEAN pass (remove empty switches from decision trees).
Found and cleaned up 1 empty switch in `$paramod$c44997bd4209540e6eefebce7e7612707e0ddf71\MuxKeyInternal.$proc$/home/jinghanhui/verilogtest/mustdo/ex1sta/vsrc/top.v:35$27'.
Cleaned up 1 empty switch.

4.2.2. Executing PROC_RMDEAD pass (remove dead branches from decision trees).
Removed a total of 0 dead cases.

4.2.3. Executing PROC_PRUNE pass (remove redundant assignments in processes).
Removed 0 redundant assignments.
Promoted 17 assignments to connections.

4.2.4. Executing PROC_INIT pass (extract init attributes).

4.2.5. Executing PROC_ARST pass (detect async resets in processes).

4.2.6. Executing PROC_ROM pass (convert switches to ROMs).
Converted 0 switches.

4.2.7. Executing PROC_MUX pass (convert decision trees to multiplexers).
Creating decoders for process `$paramod$c44997bd4209540e6eefebce7e7612707e0ddf71\MuxKeyInternal.$proc$/home/jinghanhui/verilogtest/mustdo/ex1sta/vsrc/top.v:0$48'.
Creating decoders for process `$paramod$c44997bd4209540e6eefebce7e7612707e0ddf71\MuxKeyInternal.$proc$/home/jinghanhui/verilogtest/mustdo/ex1sta/vsrc/top.v:35$27'.

4.2.8. Executing PROC_DLATCH pass (convert process syncs to latches).
No latch inferred for signal `$paramod$c44997bd4209540e6eefebce7e7612707e0ddf71\MuxKeyInternal.\pair_list[0]' from process `$paramod$c44997bd4209540e6eefebce7e7612707e0ddf71\MuxKeyInternal.$proc$/home/jinghanhui/verilogtest/mustdo/ex1sta/vsrc/top.v:0$48'.
No latch inferred for signal `$paramod$c44997bd4209540e6eefebce7e7612707e0ddf71\MuxKeyInternal.\pair_list[1]' from process `$paramod$c44997bd4209540e6eefebce7e7612707e0ddf71\MuxKeyInternal.$proc$/home/jinghanhui/verilogtest/mustdo/ex1sta/vsrc/top.v:0$48'.
No latch inferred for signal `$paramod$c44997bd4209540e6eefebce7e7612707e0ddf71\MuxKeyInternal.\key_list[0]' from process `$paramod$c44997bd4209540e6eefebce7e7612707e0ddf71\MuxKeyInternal.$proc$/home/jinghanhui/verilogtest/mustdo/ex1sta/vsrc/top.v:0$48'.
No latch inferred for signal `$paramod$c44997bd4209540e6eefebce7e7612707e0ddf71\MuxKeyInternal.\key_list[1]' from process `$paramod$c44997bd4209540e6eefebce7e7612707e0ddf71\MuxKeyInternal.$proc$/home/jinghanhui/verilogtest/mustdo/ex1sta/vsrc/top.v:0$48'.
No latch inferred for signal `$paramod$c44997bd4209540e6eefebce7e7612707e0ddf71\MuxKeyInternal.\data_list[0]' from process `$paramod$c44997bd4209540e6eefebce7e7612707e0ddf71\MuxKeyInternal.$proc$/home/jinghanhui/verilogtest/mustdo/ex1sta/vsrc/top.v:0$48'.
No latch inferred for signal `$paramod$c44997bd4209540e6eefebce7e7612707e0ddf71\MuxKeyInternal.\data_list[1]' from process `$paramod$c44997bd4209540e6eefebce7e7612707e0ddf71\MuxKeyInternal.$proc$/home/jinghanhui/verilogtest/mustdo/ex1sta/vsrc/top.v:0$48'.
No latch inferred for signal `$paramod$c44997bd4209540e6eefebce7e7612707e0ddf71\MuxKeyInternal.\pair_list[2]' from process `$paramod$c44997bd4209540e6eefebce7e7612707e0ddf71\MuxKeyInternal.$proc$/home/jinghanhui/verilogtest/mustdo/ex1sta/vsrc/top.v:0$48'.
No latch inferred for signal `$paramod$c44997bd4209540e6eefebce7e7612707e0ddf71\MuxKeyInternal.\pair_list[3]' from process `$paramod$c44997bd4209540e6eefebce7e7612707e0ddf71\MuxKeyInternal.$proc$/home/jinghanhui/verilogtest/mustdo/ex1sta/vsrc/top.v:0$48'.
No latch inferred for signal `$paramod$c44997bd4209540e6eefebce7e7612707e0ddf71\MuxKeyInternal.\key_list[2]' from process `$paramod$c44997bd4209540e6eefebce7e7612707e0ddf71\MuxKeyInternal.$proc$/home/jinghanhui/verilogtest/mustdo/ex1sta/vsrc/top.v:0$48'.
No latch inferred for signal `$paramod$c44997bd4209540e6eefebce7e7612707e0ddf71\MuxKeyInternal.\key_list[3]' from process `$paramod$c44997bd4209540e6eefebce7e7612707e0ddf71\MuxKeyInternal.$proc$/home/jinghanhui/verilogtest/mustdo/ex1sta/vsrc/top.v:0$48'.
No latch inferred for signal `$paramod$c44997bd4209540e6eefebce7e7612707e0ddf71\MuxKeyInternal.\data_list[2]' from process `$paramod$c44997bd4209540e6eefebce7e7612707e0ddf71\MuxKeyInternal.$proc$/home/jinghanhui/verilogtest/mustdo/ex1sta/vsrc/top.v:0$48'.
No latch inferred for signal `$paramod$c44997bd4209540e6eefebce7e7612707e0ddf71\MuxKeyInternal.\data_list[3]' from process `$paramod$c44997bd4209540e6eefebce7e7612707e0ddf71\MuxKeyInternal.$proc$/home/jinghanhui/verilogtest/mustdo/ex1sta/vsrc/top.v:0$48'.
No latch inferred for signal `$paramod$c44997bd4209540e6eefebce7e7612707e0ddf71\MuxKeyInternal.\out' from process `$paramod$c44997bd4209540e6eefebce7e7612707e0ddf71\MuxKeyInternal.$proc$/home/jinghanhui/verilogtest/mustdo/ex1sta/vsrc/top.v:35$27'.
No latch inferred for signal `$paramod$c44997bd4209540e6eefebce7e7612707e0ddf71\MuxKeyInternal.\lut_out' from process `$paramod$c44997bd4209540e6eefebce7e7612707e0ddf71\MuxKeyInternal.$proc$/home/jinghanhui/verilogtest/mustdo/ex1sta/vsrc/top.v:35$27'.
No latch inferred for signal `$paramod$c44997bd4209540e6eefebce7e7612707e0ddf71\MuxKeyInternal.\hit' from process `$paramod$c44997bd4209540e6eefebce7e7612707e0ddf71\MuxKeyInternal.$proc$/home/jinghanhui/verilogtest/mustdo/ex1sta/vsrc/top.v:35$27'.
No latch inferred for signal `$paramod$c44997bd4209540e6eefebce7e7612707e0ddf71\MuxKeyInternal.\i' from process `$paramod$c44997bd4209540e6eefebce7e7612707e0ddf71\MuxKeyInternal.$proc$/home/jinghanhui/verilogtest/mustdo/ex1sta/vsrc/top.v:35$27'.

4.2.9. Executing PROC_DFF pass (convert process syncs to FFs).

4.2.10. Executing PROC_MEMWR pass (convert process memory writes to cells).

4.2.11. Executing PROC_CLEAN pass (remove empty switches from decision trees).
Removing empty process `$paramod$c44997bd4209540e6eefebce7e7612707e0ddf71\MuxKeyInternal.$proc$/home/jinghanhui/verilogtest/mustdo/ex1sta/vsrc/top.v:0$48'.
Removing empty process `$paramod$c44997bd4209540e6eefebce7e7612707e0ddf71\MuxKeyInternal.$proc$/home/jinghanhui/verilogtest/mustdo/ex1sta/vsrc/top.v:35$27'.
Cleaned up 0 empty switches.

4.2.12. Executing OPT_EXPR pass (perform const folding).
Optimizing module $paramod$7c4142ec5efe02ac2b641912058d7ad3c8e770b6\MuxKey.
Optimizing module $paramod$c44997bd4209540e6eefebce7e7612707e0ddf71\MuxKeyInternal.
<suppressed ~2 debug messages>
Optimizing module top.

4.3. Executing OPT_EXPR pass (perform const folding).
Optimizing module $paramod$7c4142ec5efe02ac2b641912058d7ad3c8e770b6\MuxKey.
Optimizing module $paramod$c44997bd4209540e6eefebce7e7612707e0ddf71\MuxKeyInternal.
Optimizing module top.

4.4. Executing OPT_CLEAN pass (remove unused cells and wires).
Finding unused cells or wires in module $paramod$7c4142ec5efe02ac2b641912058d7ad3c8e770b6\MuxKey..
Finding unused cells or wires in module $paramod$c44997bd4209540e6eefebce7e7612707e0ddf71\MuxKeyInternal..
Finding unused cells or wires in module \top..
Removed 7 unused cells and 28 unused wires.
<suppressed ~9 debug messages>

4.5. Executing CHECK pass (checking for obvious problems).
Checking module $paramod$7c4142ec5efe02ac2b641912058d7ad3c8e770b6\MuxKey...
Checking module $paramod$c44997bd4209540e6eefebce7e7612707e0ddf71\MuxKeyInternal...
Checking module top...
Found and reported 0 problems.

4.6. Executing OPT pass (performing simple optimizations).

4.6.1. Executing OPT_EXPR pass (perform const folding).
Optimizing module $paramod$7c4142ec5efe02ac2b641912058d7ad3c8e770b6\MuxKey.
Optimizing module $paramod$c44997bd4209540e6eefebce7e7612707e0ddf71\MuxKeyInternal.
Optimizing module top.

4.6.2. Executing OPT_MERGE pass (detect identical cells).
Finding identical cells in module `$paramod$7c4142ec5efe02ac2b641912058d7ad3c8e770b6\MuxKey'.
Finding identical cells in module `$paramod$c44997bd4209540e6eefebce7e7612707e0ddf71\MuxKeyInternal'.
Finding identical cells in module `\top'.
Removed a total of 0 cells.

4.6.3. Executing OPT_MUXTREE pass (detect dead branches in mux trees).
Running muxtree optimizer on module $paramod$7c4142ec5efe02ac2b641912058d7ad3c8e770b6\MuxKey..
  Creating internal representation of mux trees.
  No muxes found in this module.
Running muxtree optimizer on module $paramod$c44997bd4209540e6eefebce7e7612707e0ddf71\MuxKeyInternal..
  Creating internal representation of mux trees.
  No muxes found in this module.
Running muxtree optimizer on module \top..
  Creating internal representation of mux trees.
  No muxes found in this module.
Removed 0 multiplexer ports.

4.6.4. Executing OPT_REDUCE pass (consolidate $*mux and $reduce_* inputs).
  Optimizing cells in module $paramod$7c4142ec5efe02ac2b641912058d7ad3c8e770b6\MuxKey.
  Optimizing cells in module $paramod$c44997bd4209540e6eefebce7e7612707e0ddf71\MuxKeyInternal.
  Optimizing cells in module \top.
Performed a total of 0 changes.

4.6.5. Executing OPT_MERGE pass (detect identical cells).
Finding identical cells in module `$paramod$7c4142ec5efe02ac2b641912058d7ad3c8e770b6\MuxKey'.
Finding identical cells in module `$paramod$c44997bd4209540e6eefebce7e7612707e0ddf71\MuxKeyInternal'.
Finding identical cells in module `\top'.
Removed a total of 0 cells.

4.6.6. Executing OPT_DFF pass (perform DFF optimizations).

4.6.7. Executing OPT_CLEAN pass (remove unused cells and wires).
Finding unused cells or wires in module $paramod$7c4142ec5efe02ac2b641912058d7ad3c8e770b6\MuxKey..
Finding unused cells or wires in module $paramod$c44997bd4209540e6eefebce7e7612707e0ddf71\MuxKeyInternal..
Finding unused cells or wires in module \top..

4.6.8. Executing OPT_EXPR pass (perform const folding).
Optimizing module $paramod$7c4142ec5efe02ac2b641912058d7ad3c8e770b6\MuxKey.
Optimizing module $paramod$c44997bd4209540e6eefebce7e7612707e0ddf71\MuxKeyInternal.
Optimizing module top.

4.6.9. Finished OPT passes. (There is nothing left to do.)

4.7. Executing FSM pass (extract and optimize FSM).

4.7.1. Executing FSM_DETECT pass (finding FSMs in design).

4.7.2. Executing FSM_EXTRACT pass (extracting FSM from design).

4.7.3. Executing FSM_OPT pass (simple optimizations of FSMs).

4.7.4. Executing OPT_CLEAN pass (remove unused cells and wires).
Finding unused cells or wires in module $paramod$7c4142ec5efe02ac2b641912058d7ad3c8e770b6\MuxKey..
Finding unused cells or wires in module $paramod$c44997bd4209540e6eefebce7e7612707e0ddf71\MuxKeyInternal..
Finding unused cells or wires in module \top..

4.7.5. Executing FSM_OPT pass (simple optimizations of FSMs).

4.7.6. Executing FSM_RECODE pass (re-assigning FSM state encoding).

4.7.7. Executing FSM_INFO pass (dumping all available information on FSM cells).

4.7.8. Executing FSM_MAP pass (mapping FSMs to basic logic).

4.8. Executing OPT pass (performing simple optimizations).

4.8.1. Executing OPT_EXPR pass (perform const folding).
Optimizing module $paramod$7c4142ec5efe02ac2b641912058d7ad3c8e770b6\MuxKey.
Optimizing module $paramod$c44997bd4209540e6eefebce7e7612707e0ddf71\MuxKeyInternal.
Optimizing module top.

4.8.2. Executing OPT_MERGE pass (detect identical cells).
Finding identical cells in module `$paramod$7c4142ec5efe02ac2b641912058d7ad3c8e770b6\MuxKey'.
Finding identical cells in module `$paramod$c44997bd4209540e6eefebce7e7612707e0ddf71\MuxKeyInternal'.
Finding identical cells in module `\top'.
Removed a total of 0 cells.

4.8.3. Executing OPT_MUXTREE pass (detect dead branches in mux trees).
Running muxtree optimizer on module $paramod$7c4142ec5efe02ac2b641912058d7ad3c8e770b6\MuxKey..
  Creating internal representation of mux trees.
  No muxes found in this module.
Running muxtree optimizer on module $paramod$c44997bd4209540e6eefebce7e7612707e0ddf71\MuxKeyInternal..
  Creating internal representation of mux trees.
  No muxes found in this module.
Running muxtree optimizer on module \top..
  Creating internal representation of mux trees.
  No muxes found in this module.
Removed 0 multiplexer ports.

4.8.4. Executing OPT_REDUCE pass (consolidate $*mux and $reduce_* inputs).
  Optimizing cells in module $paramod$7c4142ec5efe02ac2b641912058d7ad3c8e770b6\MuxKey.
  Optimizing cells in module $paramod$c44997bd4209540e6eefebce7e7612707e0ddf71\MuxKeyInternal.
  Optimizing cells in module \top.
Performed a total of 0 changes.

4.8.5. Executing OPT_MERGE pass (detect identical cells).
Finding identical cells in module `$paramod$7c4142ec5efe02ac2b641912058d7ad3c8e770b6\MuxKey'.
Finding identical cells in module `$paramod$c44997bd4209540e6eefebce7e7612707e0ddf71\MuxKeyInternal'.
Finding identical cells in module `\top'.
Removed a total of 0 cells.

4.8.6. Executing OPT_DFF pass (perform DFF optimizations).

4.8.7. Executing OPT_CLEAN pass (remove unused cells and wires).
Finding unused cells or wires in module $paramod$7c4142ec5efe02ac2b641912058d7ad3c8e770b6\MuxKey..
Finding unused cells or wires in module $paramod$c44997bd4209540e6eefebce7e7612707e0ddf71\MuxKeyInternal..
Finding unused cells or wires in module \top..

4.8.8. Executing OPT_EXPR pass (perform const folding).
Optimizing module $paramod$7c4142ec5efe02ac2b641912058d7ad3c8e770b6\MuxKey.
Optimizing module $paramod$c44997bd4209540e6eefebce7e7612707e0ddf71\MuxKeyInternal.
Optimizing module top.

4.8.9. Finished OPT passes. (There is nothing left to do.)

4.9. Executing WREDUCE pass (reducing word size of cells).

4.10. Executing PEEPOPT pass (run peephole optimizers).

4.11. Executing OPT_CLEAN pass (remove unused cells and wires).
Finding unused cells or wires in module $paramod$7c4142ec5efe02ac2b641912058d7ad3c8e770b6\MuxKey..
Finding unused cells or wires in module $paramod$c44997bd4209540e6eefebce7e7612707e0ddf71\MuxKeyInternal..
Finding unused cells or wires in module \top..

4.12. Executing ALUMACC pass (create $alu and $macc cells).
Extracting $alu and $macc cells in module $paramod$7c4142ec5efe02ac2b641912058d7ad3c8e770b6\MuxKey:
  created 0 $alu and 0 $macc cells.
Extracting $alu and $macc cells in module $paramod$c44997bd4209540e6eefebce7e7612707e0ddf71\MuxKeyInternal:
  created 0 $alu and 0 $macc cells.
Extracting $alu and $macc cells in module top:
  created 0 $alu and 0 $macc cells.

4.13. Executing SHARE pass (SAT-based resource sharing).

4.14. Executing OPT pass (performing simple optimizations).

4.14.1. Executing OPT_EXPR pass (perform const folding).
Optimizing module $paramod$7c4142ec5efe02ac2b641912058d7ad3c8e770b6\MuxKey.
Optimizing module $paramod$c44997bd4209540e6eefebce7e7612707e0ddf71\MuxKeyInternal.
Optimizing module top.

4.14.2. Executing OPT_MERGE pass (detect identical cells).
Finding identical cells in module `$paramod$7c4142ec5efe02ac2b641912058d7ad3c8e770b6\MuxKey'.
Finding identical cells in module `$paramod$c44997bd4209540e6eefebce7e7612707e0ddf71\MuxKeyInternal'.
Finding identical cells in module `\top'.
Removed a total of 0 cells.

4.14.3. Executing OPT_MUXTREE pass (detect dead branches in mux trees).
Running muxtree optimizer on module $paramod$7c4142ec5efe02ac2b641912058d7ad3c8e770b6\MuxKey..
  Creating internal representation of mux trees.
  No muxes found in this module.
Running muxtree optimizer on module $paramod$c44997bd4209540e6eefebce7e7612707e0ddf71\MuxKeyInternal..
  Creating internal representation of mux trees.
  No muxes found in this module.
Running muxtree optimizer on module \top..
  Creating internal representation of mux trees.
  No muxes found in this module.
Removed 0 multiplexer ports.

4.14.4. Executing OPT_REDUCE pass (consolidate $*mux and $reduce_* inputs).
  Optimizing cells in module $paramod$7c4142ec5efe02ac2b641912058d7ad3c8e770b6\MuxKey.
  Optimizing cells in module $paramod$c44997bd4209540e6eefebce7e7612707e0ddf71\MuxKeyInternal.
  Optimizing cells in module \top.
Performed a total of 0 changes.

4.14.5. Executing OPT_MERGE pass (detect identical cells).
Finding identical cells in module `$paramod$7c4142ec5efe02ac2b641912058d7ad3c8e770b6\MuxKey'.
Finding identical cells in module `$paramod$c44997bd4209540e6eefebce7e7612707e0ddf71\MuxKeyInternal'.
Finding identical cells in module `\top'.
Removed a total of 0 cells.

4.14.6. Executing OPT_DFF pass (perform DFF optimizations).

4.14.7. Executing OPT_CLEAN pass (remove unused cells and wires).
Finding unused cells or wires in module $paramod$7c4142ec5efe02ac2b641912058d7ad3c8e770b6\MuxKey..
Finding unused cells or wires in module $paramod$c44997bd4209540e6eefebce7e7612707e0ddf71\MuxKeyInternal..
Finding unused cells or wires in module \top..

4.14.8. Executing OPT_EXPR pass (perform const folding).
Optimizing module $paramod$7c4142ec5efe02ac2b641912058d7ad3c8e770b6\MuxKey.
Optimizing module $paramod$c44997bd4209540e6eefebce7e7612707e0ddf71\MuxKeyInternal.
Optimizing module top.

4.14.9. Finished OPT passes. (There is nothing left to do.)

4.15. Executing MEMORY pass.

4.15.1. Executing OPT_MEM pass (optimize memories).
Performed a total of 0 transformations.

4.15.2. Executing OPT_MEM_PRIORITY pass (removing unnecessary memory write priority relations).
Performed a total of 0 transformations.

4.15.3. Executing OPT_MEM_FEEDBACK pass (finding memory read-to-write feedback paths).

4.15.4. Executing MEMORY_BMUX2ROM pass (converting muxes to ROMs).

4.15.5. Executing MEMORY_DFF pass (merging $dff cells to $memrd).

4.15.6. Executing OPT_CLEAN pass (remove unused cells and wires).
Finding unused cells or wires in module $paramod$7c4142ec5efe02ac2b641912058d7ad3c8e770b6\MuxKey..
Finding unused cells or wires in module $paramod$c44997bd4209540e6eefebce7e7612707e0ddf71\MuxKeyInternal..
Finding unused cells or wires in module \top..

4.15.7. Executing MEMORY_SHARE pass (consolidating $memrd/$memwr cells).

4.15.8. Executing OPT_MEM_WIDEN pass (optimize memories where all ports are wide).
Performed a total of 0 transformations.

4.15.9. Executing OPT_CLEAN pass (remove unused cells and wires).
Finding unused cells or wires in module $paramod$7c4142ec5efe02ac2b641912058d7ad3c8e770b6\MuxKey..
Finding unused cells or wires in module $paramod$c44997bd4209540e6eefebce7e7612707e0ddf71\MuxKeyInternal..
Finding unused cells or wires in module \top..

4.15.10. Executing MEMORY_COLLECT pass (generating $mem cells).

4.16. Executing OPT_CLEAN pass (remove unused cells and wires).
Finding unused cells or wires in module $paramod$7c4142ec5efe02ac2b641912058d7ad3c8e770b6\MuxKey..
Finding unused cells or wires in module $paramod$c44997bd4209540e6eefebce7e7612707e0ddf71\MuxKeyInternal..
Finding unused cells or wires in module \top..

4.17. Executing OPT pass (performing simple optimizations).

4.17.1. Executing OPT_EXPR pass (perform const folding).
Optimizing module $paramod$7c4142ec5efe02ac2b641912058d7ad3c8e770b6\MuxKey.
Optimizing module $paramod$c44997bd4209540e6eefebce7e7612707e0ddf71\MuxKeyInternal.
Optimizing module top.

4.17.2. Executing OPT_MERGE pass (detect identical cells).
Finding identical cells in module `$paramod$7c4142ec5efe02ac2b641912058d7ad3c8e770b6\MuxKey'.
Finding identical cells in module `$paramod$c44997bd4209540e6eefebce7e7612707e0ddf71\MuxKeyInternal'.
Finding identical cells in module `\top'.
Removed a total of 0 cells.

4.17.3. Executing OPT_DFF pass (perform DFF optimizations).

4.17.4. Executing OPT_CLEAN pass (remove unused cells and wires).
Finding unused cells or wires in module $paramod$7c4142ec5efe02ac2b641912058d7ad3c8e770b6\MuxKey..
Finding unused cells or wires in module $paramod$c44997bd4209540e6eefebce7e7612707e0ddf71\MuxKeyInternal..
Finding unused cells or wires in module \top..

4.17.5. Finished fast OPT passes.

4.18. Executing MEMORY_MAP pass (converting memories to logic and flip-flops).

4.19. Executing OPT pass (performing simple optimizations).

4.19.1. Executing OPT_EXPR pass (perform const folding).
Optimizing module $paramod$7c4142ec5efe02ac2b641912058d7ad3c8e770b6\MuxKey.
Optimizing module $paramod$c44997bd4209540e6eefebce7e7612707e0ddf71\MuxKeyInternal.
Optimizing module top.

4.19.2. Executing OPT_MERGE pass (detect identical cells).
Finding identical cells in module `$paramod$7c4142ec5efe02ac2b641912058d7ad3c8e770b6\MuxKey'.
Finding identical cells in module `$paramod$c44997bd4209540e6eefebce7e7612707e0ddf71\MuxKeyInternal'.
Finding identical cells in module `\top'.
Removed a total of 0 cells.

4.19.3. Executing OPT_MUXTREE pass (detect dead branches in mux trees).
Running muxtree optimizer on module $paramod$7c4142ec5efe02ac2b641912058d7ad3c8e770b6\MuxKey..
  Creating internal representation of mux trees.
  No muxes found in this module.
Running muxtree optimizer on module $paramod$c44997bd4209540e6eefebce7e7612707e0ddf71\MuxKeyInternal..
  Creating internal representation of mux trees.
  No muxes found in this module.
Running muxtree optimizer on module \top..
  Creating internal representation of mux trees.
  No muxes found in this module.
Removed 0 multiplexer ports.

4.19.4. Executing OPT_REDUCE pass (consolidate $*mux and $reduce_* inputs).
  Optimizing cells in module $paramod$7c4142ec5efe02ac2b641912058d7ad3c8e770b6\MuxKey.
  Optimizing cells in module $paramod$c44997bd4209540e6eefebce7e7612707e0ddf71\MuxKeyInternal.
  Optimizing cells in module \top.
Performed a total of 0 changes.

4.19.5. Executing OPT_MERGE pass (detect identical cells).
Finding identical cells in module `$paramod$7c4142ec5efe02ac2b641912058d7ad3c8e770b6\MuxKey'.
Finding identical cells in module `$paramod$c44997bd4209540e6eefebce7e7612707e0ddf71\MuxKeyInternal'.
Finding identical cells in module `\top'.
Removed a total of 0 cells.

4.19.6. Executing OPT_SHARE pass.

4.19.7. Executing OPT_DFF pass (perform DFF optimizations).

4.19.8. Executing OPT_CLEAN pass (remove unused cells and wires).
Finding unused cells or wires in module $paramod$7c4142ec5efe02ac2b641912058d7ad3c8e770b6\MuxKey..
Finding unused cells or wires in module $paramod$c44997bd4209540e6eefebce7e7612707e0ddf71\MuxKeyInternal..
Finding unused cells or wires in module \top..

4.19.9. Executing OPT_EXPR pass (perform const folding).
Optimizing module $paramod$7c4142ec5efe02ac2b641912058d7ad3c8e770b6\MuxKey.
Optimizing module $paramod$c44997bd4209540e6eefebce7e7612707e0ddf71\MuxKeyInternal.
Optimizing module top.

4.19.10. Finished OPT passes. (There is nothing left to do.)

4.20. Executing TECHMAP pass (map to technology primitives).

4.20.1. Executing Verilog-2005 frontend: /usr/local/bin/../share/yosys/techmap.v
Parsing Verilog input from `/usr/local/bin/../share/yosys/techmap.v' to AST representation.
Generating RTLIL representation for module `\_90_simplemap_bool_ops'.
Generating RTLIL representation for module `\_90_simplemap_reduce_ops'.
Generating RTLIL representation for module `\_90_simplemap_logic_ops'.
Generating RTLIL representation for module `\_90_simplemap_compare_ops'.
Generating RTLIL representation for module `\_90_simplemap_various'.
Generating RTLIL representation for module `\_90_simplemap_registers'.
Generating RTLIL representation for module `\_90_shift_ops_shr_shl_sshl_sshr'.
Generating RTLIL representation for module `\_90_shift_shiftx'.
Generating RTLIL representation for module `\_90_fa'.
Generating RTLIL representation for module `\_90_lcu_brent_kung'.
Generating RTLIL representation for module `\_90_alu'.
Generating RTLIL representation for module `\_90_macc'.
Generating RTLIL representation for module `\_90_alumacc'.
Generating RTLIL representation for module `\$__div_mod_u'.
Generating RTLIL representation for module `\$__div_mod_trunc'.
Generating RTLIL representation for module `\_90_div'.
Generating RTLIL representation for module `\_90_mod'.
Generating RTLIL representation for module `\$__div_mod_floor'.
Generating RTLIL representation for module `\_90_divfloor'.
Generating RTLIL representation for module `\_90_modfloor'.
Generating RTLIL representation for module `\_90_pow'.
Generating RTLIL representation for module `\_90_pmux'.
Generating RTLIL representation for module `\_90_demux'.
Generating RTLIL representation for module `\_90_lut'.
Successfully finished Verilog frontend.

4.20.2. Continuing TECHMAP pass.
Using extmapper simplemap for cells of type $eq.
Using extmapper simplemap for cells of type $and.
Using extmapper simplemap for cells of type $or.
No more expansions possible.
<suppressed ~84 debug messages>

4.21. Executing OPT pass (performing simple optimizations).

4.21.1. Executing OPT_EXPR pass (perform const folding).
Optimizing module $paramod$7c4142ec5efe02ac2b641912058d7ad3c8e770b6\MuxKey.
Optimizing module $paramod$c44997bd4209540e6eefebce7e7612707e0ddf71\MuxKeyInternal.
Optimizing module top.

4.21.2. Executing OPT_MERGE pass (detect identical cells).
Finding identical cells in module `$paramod$7c4142ec5efe02ac2b641912058d7ad3c8e770b6\MuxKey'.
Finding identical cells in module `$paramod$c44997bd4209540e6eefebce7e7612707e0ddf71\MuxKeyInternal'.
Finding identical cells in module `\top'.
Removed a total of 0 cells.

4.21.3. Executing OPT_DFF pass (perform DFF optimizations).

4.21.4. Executing OPT_CLEAN pass (remove unused cells and wires).
Finding unused cells or wires in module $paramod$7c4142ec5efe02ac2b641912058d7ad3c8e770b6\MuxKey..
Finding unused cells or wires in module $paramod$c44997bd4209540e6eefebce7e7612707e0ddf71\MuxKeyInternal..
Finding unused cells or wires in module \top..
Removed 0 unused cells and 4 unused wires.
<suppressed ~1 debug messages>

4.21.5. Finished fast OPT passes.

4.22. Executing ABC pass (technology mapping using ABC).

4.22.1. Extracting gate netlist of module `$paramod$7c4142ec5efe02ac2b641912058d7ad3c8e770b6\MuxKey' to `<abc-temp-dir>/input.blif'..
Extracted 0 gates and 0 wires to a netlist network with 0 inputs and 0 outputs.
Don't call ABC as there is nothing to map.
Removing temp directory.

4.22.2. Extracting gate netlist of module `$paramod$c44997bd4209540e6eefebce7e7612707e0ddf71\MuxKeyInternal' to `<abc-temp-dir>/input.blif'..
Extracted 30 gates and 48 wires to a netlist network with 18 inputs and 2 outputs.

4.22.2.1. Executing ABC.
Running ABC command: "<yosys-exe-dir>/yosys-abc" -s -f <abc-temp-dir>/abc.script 2>&1
ABC: ABC command line: "source <abc-temp-dir>/abc.script".
ABC: 
ABC: + read_blif <abc-temp-dir>/input.blif 
ABC: + read_library <abc-temp-dir>/stdcells.genlib 
ABC: Entered genlib library with 13 gates from file "<abc-temp-dir>/stdcells.genlib".
ABC: + strash 
ABC: + dretime 
ABC: + map 
ABC: + write_blif <abc-temp-dir>/output.blif 

4.22.2.2. Re-integrating ABC results.
ABC RESULTS:               XOR cells:        8
ABC RESULTS:            ANDNOT cells:        8
ABC RESULTS:                OR cells:       10
ABC RESULTS:        internal signals:       28
ABC RESULTS:           input signals:       18
ABC RESULTS:          output signals:        2
Removing temp directory.

4.22.3. Extracting gate netlist of module `\top' to `<abc-temp-dir>/input.blif'..
Extracted 0 gates and 0 wires to a netlist network with 0 inputs and 0 outputs.
Don't call ABC as there is nothing to map.
Removing temp directory.

4.23. Executing OPT pass (performing simple optimizations).

4.23.1. Executing OPT_EXPR pass (perform const folding).
Optimizing module $paramod$7c4142ec5efe02ac2b641912058d7ad3c8e770b6\MuxKey.
Optimizing module $paramod$c44997bd4209540e6eefebce7e7612707e0ddf71\MuxKeyInternal.
Optimizing module top.

4.23.2. Executing OPT_MERGE pass (detect identical cells).
Finding identical cells in module `$paramod$7c4142ec5efe02ac2b641912058d7ad3c8e770b6\MuxKey'.
Finding identical cells in module `$paramod$c44997bd4209540e6eefebce7e7612707e0ddf71\MuxKeyInternal'.
Finding identical cells in module `\top'.
Removed a total of 0 cells.

4.23.3. Executing OPT_DFF pass (perform DFF optimizations).

4.23.4. Executing OPT_CLEAN pass (remove unused cells and wires).
Finding unused cells or wires in module $paramod$7c4142ec5efe02ac2b641912058d7ad3c8e770b6\MuxKey..
Finding unused cells or wires in module $paramod$c44997bd4209540e6eefebce7e7612707e0ddf71\MuxKeyInternal..
Finding unused cells or wires in module \top..
Removed 0 unused cells and 38 unused wires.
<suppressed ~1 debug messages>

4.23.5. Finished fast OPT passes.

4.24. Executing HIERARCHY pass (managing design hierarchy).

4.24.1. Analyzing design hierarchy..
Top module:  \top
Used module:     $paramod$7c4142ec5efe02ac2b641912058d7ad3c8e770b6\MuxKey
Used module:         $paramod$c44997bd4209540e6eefebce7e7612707e0ddf71\MuxKeyInternal

4.24.2. Analyzing design hierarchy..
Top module:  \top
Used module:     $paramod$7c4142ec5efe02ac2b641912058d7ad3c8e770b6\MuxKey
Used module:         $paramod$c44997bd4209540e6eefebce7e7612707e0ddf71\MuxKeyInternal
Removed 0 unused modules.

4.25. Printing statistics.

=== $paramod$7c4142ec5efe02ac2b641912058d7ad3c8e770b6\MuxKey ===

   Number of wires:                  3
   Number of wire bits:             20
   Number of public wires:           3
   Number of public wire bits:      20
   Number of ports:                  3
   Number of port bits:             20
   Number of memories:               0
   Number of memory bits:            0
   Number of processes:              0
   Number of cells:                  1
     $paramod$c44997bd4209540e6eefebce7e7612707e0ddf71\MuxKeyInternal      1

=== $paramod$c44997bd4209540e6eefebce7e7612707e0ddf71\MuxKeyInternal ===

   Number of wires:                 42
   Number of wire bits:            112
   Number of public wires:          18
   Number of public wire bits:      88
   Number of ports:                  4
   Number of port bits:             22
   Number of memories:               0
   Number of memory bits:            0
   Number of processes:              0
   Number of cells:                 26
     $_ANDNOT_                       8
     $_OR_                          10
     $_XOR_                          8

=== top ===

   Number of wires:                  3
   Number of wire bits:             12
   Number of public wires:           3
   Number of public wire bits:      12
   Number of ports:                  3
   Number of port bits:             12
   Number of memories:               0
   Number of memory bits:            0
   Number of processes:              0
   Number of cells:                  1
     $paramod$7c4142ec5efe02ac2b641912058d7ad3c8e770b6\MuxKey      1

=== design hierarchy ===

   top                               1
     $paramod$7c4142ec5efe02ac2b641912058d7ad3c8e770b6\MuxKey      1
       $paramod$c44997bd4209540e6eefebce7e7612707e0ddf71\MuxKeyInternal      1

   Number of wires:                 48
   Number of wire bits:            144
   Number of public wires:          24
   Number of public wire bits:     120
   Number of ports:                 10
   Number of port bits:             54
   Number of memories:               0
   Number of memory bits:            0
   Number of processes:              0
   Number of cells:                 26
     $_ANDNOT_                       8
     $_OR_                          10
     $_XOR_                          8

4.26. Executing CHECK pass (checking for obvious problems).
Checking module $paramod$7c4142ec5efe02ac2b641912058d7ad3c8e770b6\MuxKey...
Checking module $paramod$c44997bd4209540e6eefebce7e7612707e0ddf71\MuxKeyInternal...
Checking module top...
Found and reported 0 problems.

5. Executing OPT pass (performing simple optimizations).

5.1. Executing OPT_EXPR pass (perform const folding).
Optimizing module $paramod$7c4142ec5efe02ac2b641912058d7ad3c8e770b6\MuxKey.
Optimizing module $paramod$c44997bd4209540e6eefebce7e7612707e0ddf71\MuxKeyInternal.
Optimizing module top.

5.2. Executing OPT_MERGE pass (detect identical cells).
Finding identical cells in module `$paramod$7c4142ec5efe02ac2b641912058d7ad3c8e770b6\MuxKey'.
Finding identical cells in module `$paramod$c44997bd4209540e6eefebce7e7612707e0ddf71\MuxKeyInternal'.
Finding identical cells in module `\top'.
Removed a total of 0 cells.

5.3. Executing OPT_MUXTREE pass (detect dead branches in mux trees).
Running muxtree optimizer on module $paramod$7c4142ec5efe02ac2b641912058d7ad3c8e770b6\MuxKey..
  Creating internal representation of mux trees.
  No muxes found in this module.
Running muxtree optimizer on module $paramod$c44997bd4209540e6eefebce7e7612707e0ddf71\MuxKeyInternal..
  Creating internal representation of mux trees.
  No muxes found in this module.
Running muxtree optimizer on module \top..
  Creating internal representation of mux trees.
  No muxes found in this module.
Removed 0 multiplexer ports.

5.4. Executing OPT_REDUCE pass (consolidate $*mux and $reduce_* inputs).
  Optimizing cells in module $paramod$7c4142ec5efe02ac2b641912058d7ad3c8e770b6\MuxKey.
  Optimizing cells in module $paramod$c44997bd4209540e6eefebce7e7612707e0ddf71\MuxKeyInternal.
  Optimizing cells in module \top.
Performed a total of 0 changes.

5.5. Executing OPT_MERGE pass (detect identical cells).
Finding identical cells in module `$paramod$7c4142ec5efe02ac2b641912058d7ad3c8e770b6\MuxKey'.
Finding identical cells in module `$paramod$c44997bd4209540e6eefebce7e7612707e0ddf71\MuxKeyInternal'.
Finding identical cells in module `\top'.
Removed a total of 0 cells.

5.6. Executing OPT_DFF pass (perform DFF optimizations).

5.7. Executing OPT_CLEAN pass (remove unused cells and wires).
Finding unused cells or wires in module $paramod$7c4142ec5efe02ac2b641912058d7ad3c8e770b6\MuxKey..
Finding unused cells or wires in module $paramod$c44997bd4209540e6eefebce7e7612707e0ddf71\MuxKeyInternal..
Finding unused cells or wires in module \top..
Removed 0 unused cells and 14 unused wires.
<suppressed ~14 debug messages>

5.8. Executing OPT_EXPR pass (perform const folding).
Optimizing module $paramod$7c4142ec5efe02ac2b641912058d7ad3c8e770b6\MuxKey.
Optimizing module $paramod$c44997bd4209540e6eefebce7e7612707e0ddf71\MuxKeyInternal.
Optimizing module top.

5.9. Rerunning OPT passes. (Maybe there is more to do..)

5.10. Executing OPT_MUXTREE pass (detect dead branches in mux trees).
Running muxtree optimizer on module $paramod$7c4142ec5efe02ac2b641912058d7ad3c8e770b6\MuxKey..
  Creating internal representation of mux trees.
  No muxes found in this module.
Running muxtree optimizer on module $paramod$c44997bd4209540e6eefebce7e7612707e0ddf71\MuxKeyInternal..
  Creating internal representation of mux trees.
  No muxes found in this module.
Running muxtree optimizer on module \top..
  Creating internal representation of mux trees.
  No muxes found in this module.
Removed 0 multiplexer ports.

5.11. Executing OPT_REDUCE pass (consolidate $*mux and $reduce_* inputs).
  Optimizing cells in module $paramod$7c4142ec5efe02ac2b641912058d7ad3c8e770b6\MuxKey.
  Optimizing cells in module $paramod$c44997bd4209540e6eefebce7e7612707e0ddf71\MuxKeyInternal.
  Optimizing cells in module \top.
Performed a total of 0 changes.

5.12. Executing OPT_MERGE pass (detect identical cells).
Finding identical cells in module `$paramod$7c4142ec5efe02ac2b641912058d7ad3c8e770b6\MuxKey'.
Finding identical cells in module `$paramod$c44997bd4209540e6eefebce7e7612707e0ddf71\MuxKeyInternal'.
Finding identical cells in module `\top'.
Removed a total of 0 cells.

5.13. Executing OPT_DFF pass (perform DFF optimizations).

5.14. Executing OPT_CLEAN pass (remove unused cells and wires).
Finding unused cells or wires in module $paramod$7c4142ec5efe02ac2b641912058d7ad3c8e770b6\MuxKey..
Finding unused cells or wires in module $paramod$c44997bd4209540e6eefebce7e7612707e0ddf71\MuxKeyInternal..
Finding unused cells or wires in module \top..

5.15. Executing OPT_EXPR pass (perform const folding).
Optimizing module $paramod$7c4142ec5efe02ac2b641912058d7ad3c8e770b6\MuxKey.
Optimizing module $paramod$c44997bd4209540e6eefebce7e7612707e0ddf71\MuxKeyInternal.
Optimizing module top.

5.16. Finished OPT passes. (There is nothing left to do.)

6. Executing TECHMAP pass (map to technology primitives).

6.1. Executing Verilog-2005 frontend: /home/jinghanhui/yosys-sta/scripts/../nangate45/verilog/cells_latch.v
Parsing Verilog input from `/home/jinghanhui/yosys-sta/scripts/../nangate45/verilog/cells_latch.v' to AST representation.
Generating RTLIL representation for module `\$_DLATCH_P_'.
Generating RTLIL representation for module `\$_DLATCH_N_'.
Successfully finished Verilog frontend.

6.2. Continuing TECHMAP pass.
No more expansions possible.
<suppressed ~4 debug messages>

7. Executing DFFLIBMAP pass (mapping DFF cells to sequential cells from liberty file).
Warning: Found unsupported expression 'SE*SI+D*!SE' in pin attribute of cell 'SDFFRS_X1' - skipping.
Warning: Found unsupported expression 'SE*SI+D*!SE' in pin attribute of cell 'SDFFRS_X2' - skipping.
Warning: Found unsupported expression 'SE*SI+D*!SE' in pin attribute of cell 'SDFFR_X1' - skipping.
Warning: Found unsupported expression 'SE*SI+D*!SE' in pin attribute of cell 'SDFFR_X2' - skipping.
Warning: Found unsupported expression 'SE*SI+D*!SE' in pin attribute of cell 'SDFFS_X1' - skipping.
Warning: Found unsupported expression 'SE*SI+D*!SE' in pin attribute of cell 'SDFFS_X2' - skipping.
Warning: Found unsupported expression 'SE*SI+D*!SE' in pin attribute of cell 'SDFF_X1' - skipping.
Warning: Found unsupported expression 'SE*SI+D*!SE' in pin attribute of cell 'SDFF_X2' - skipping.
  cell DFF_X1 (noninv, pins=4, area=4.52) is a direct match for cell type $_DFF_P_.
Warning: Found unsupported expression 'SE*SI+D*!SE' in pin attribute of cell 'SDFFRS_X1' - skipping.
Warning: Found unsupported expression 'SE*SI+D*!SE' in pin attribute of cell 'SDFFRS_X2' - skipping.
Warning: Found unsupported expression 'SE*SI+D*!SE' in pin attribute of cell 'SDFFR_X1' - skipping.
Warning: Found unsupported expression 'SE*SI+D*!SE' in pin attribute of cell 'SDFFR_X2' - skipping.
Warning: Found unsupported expression 'SE*SI+D*!SE' in pin attribute of cell 'SDFFS_X1' - skipping.
Warning: Found unsupported expression 'SE*SI+D*!SE' in pin attribute of cell 'SDFFS_X2' - skipping.
Warning: Found unsupported expression 'SE*SI+D*!SE' in pin attribute of cell 'SDFF_X1' - skipping.
Warning: Found unsupported expression 'SE*SI+D*!SE' in pin attribute of cell 'SDFF_X2' - skipping.
  cell DFFR_X1 (noninv, pins=5, area=5.32) is a direct match for cell type $_DFF_PN0_.
Warning: Found unsupported expression 'SE*SI+D*!SE' in pin attribute of cell 'SDFFRS_X1' - skipping.
Warning: Found unsupported expression 'SE*SI+D*!SE' in pin attribute of cell 'SDFFRS_X2' - skipping.
Warning: Found unsupported expression 'SE*SI+D*!SE' in pin attribute of cell 'SDFFR_X1' - skipping.
Warning: Found unsupported expression 'SE*SI+D*!SE' in pin attribute of cell 'SDFFR_X2' - skipping.
Warning: Found unsupported expression 'SE*SI+D*!SE' in pin attribute of cell 'SDFFS_X1' - skipping.
Warning: Found unsupported expression 'SE*SI+D*!SE' in pin attribute of cell 'SDFFS_X2' - skipping.
Warning: Found unsupported expression 'SE*SI+D*!SE' in pin attribute of cell 'SDFF_X1' - skipping.
Warning: Found unsupported expression 'SE*SI+D*!SE' in pin attribute of cell 'SDFF_X2' - skipping.
  cell DFFS_X1 (noninv, pins=5, area=5.32) is a direct match for cell type $_DFF_PN1_.
Warning: Found unsupported expression 'SE*SI+D*!SE' in pin attribute of cell 'SDFFRS_X1' - skipping.
Warning: Found unsupported expression 'SE*SI+D*!SE' in pin attribute of cell 'SDFFRS_X2' - skipping.
Warning: Found unsupported expression 'SE*SI+D*!SE' in pin attribute of cell 'SDFFR_X1' - skipping.
Warning: Found unsupported expression 'SE*SI+D*!SE' in pin attribute of cell 'SDFFR_X2' - skipping.
Warning: Found unsupported expression 'SE*SI+D*!SE' in pin attribute of cell 'SDFFS_X1' - skipping.
Warning: Found unsupported expression 'SE*SI+D*!SE' in pin attribute of cell 'SDFFS_X2' - skipping.
Warning: Found unsupported expression 'SE*SI+D*!SE' in pin attribute of cell 'SDFF_X1' - skipping.
Warning: Found unsupported expression 'SE*SI+D*!SE' in pin attribute of cell 'SDFF_X2' - skipping.
Warning: Found unsupported expression 'SE*SI+D*!SE' in pin attribute of cell 'SDFFRS_X1' - skipping.
Warning: Found unsupported expression 'SE*SI+D*!SE' in pin attribute of cell 'SDFFRS_X2' - skipping.
Warning: Found unsupported expression 'SE*SI+D*!SE' in pin attribute of cell 'SDFFR_X1' - skipping.
Warning: Found unsupported expression 'SE*SI+D*!SE' in pin attribute of cell 'SDFFR_X2' - skipping.
Warning: Found unsupported expression 'SE*SI+D*!SE' in pin attribute of cell 'SDFFS_X1' - skipping.
Warning: Found unsupported expression 'SE*SI+D*!SE' in pin attribute of cell 'SDFFS_X2' - skipping.
Warning: Found unsupported expression 'SE*SI+D*!SE' in pin attribute of cell 'SDFF_X1' - skipping.
Warning: Found unsupported expression 'SE*SI+D*!SE' in pin attribute of cell 'SDFF_X2' - skipping.
Warning: Found unsupported expression 'SE*SI+D*!SE' in pin attribute of cell 'SDFFRS_X1' - skipping.
Warning: Found unsupported expression 'SE*SI+D*!SE' in pin attribute of cell 'SDFFRS_X2' - skipping.
Warning: Found unsupported expression 'SE*SI+D*!SE' in pin attribute of cell 'SDFFR_X1' - skipping.
Warning: Found unsupported expression 'SE*SI+D*!SE' in pin attribute of cell 'SDFFR_X2' - skipping.
Warning: Found unsupported expression 'SE*SI+D*!SE' in pin attribute of cell 'SDFFS_X1' - skipping.
Warning: Found unsupported expression 'SE*SI+D*!SE' in pin attribute of cell 'SDFFS_X2' - skipping.
Warning: Found unsupported expression 'SE*SI+D*!SE' in pin attribute of cell 'SDFF_X1' - skipping.
Warning: Found unsupported expression 'SE*SI+D*!SE' in pin attribute of cell 'SDFF_X2' - skipping.
  cell DFFRS_X1 (noninv, pins=6, area=6.38) is a direct match for cell type $_DFFSR_PNN_.
Warning: Found unsupported expression 'SE*SI+D*!SE' in pin attribute of cell 'SDFFRS_X1' - skipping.
Warning: Found unsupported expression 'SE*SI+D*!SE' in pin attribute of cell 'SDFFRS_X2' - skipping.
Warning: Found unsupported expression 'SE*SI+D*!SE' in pin attribute of cell 'SDFFR_X1' - skipping.
Warning: Found unsupported expression 'SE*SI+D*!SE' in pin attribute of cell 'SDFFR_X2' - skipping.
Warning: Found unsupported expression 'SE*SI+D*!SE' in pin attribute of cell 'SDFFS_X1' - skipping.
Warning: Found unsupported expression 'SE*SI+D*!SE' in pin attribute of cell 'SDFFS_X2' - skipping.
Warning: Found unsupported expression 'SE*SI+D*!SE' in pin attribute of cell 'SDFF_X1' - skipping.
Warning: Found unsupported expression 'SE*SI+D*!SE' in pin attribute of cell 'SDFF_X2' - skipping.
Warning: Found unsupported expression 'SE*SI+D*!SE' in pin attribute of cell 'SDFFRS_X1' - skipping.
Warning: Found unsupported expression 'SE*SI+D*!SE' in pin attribute of cell 'SDFFRS_X2' - skipping.
Warning: Found unsupported expression 'SE*SI+D*!SE' in pin attribute of cell 'SDFFR_X1' - skipping.
Warning: Found unsupported expression 'SE*SI+D*!SE' in pin attribute of cell 'SDFFR_X2' - skipping.
Warning: Found unsupported expression 'SE*SI+D*!SE' in pin attribute of cell 'SDFFS_X1' - skipping.
Warning: Found unsupported expression 'SE*SI+D*!SE' in pin attribute of cell 'SDFFS_X2' - skipping.
Warning: Found unsupported expression 'SE*SI+D*!SE' in pin attribute of cell 'SDFF_X1' - skipping.
Warning: Found unsupported expression 'SE*SI+D*!SE' in pin attribute of cell 'SDFF_X2' - skipping.
Warning: Found unsupported expression 'SE*SI+D*!SE' in pin attribute of cell 'SDFFRS_X1' - skipping.
Warning: Found unsupported expression 'SE*SI+D*!SE' in pin attribute of cell 'SDFFRS_X2' - skipping.
Warning: Found unsupported expression 'SE*SI+D*!SE' in pin attribute of cell 'SDFFR_X1' - skipping.
Warning: Found unsupported expression 'SE*SI+D*!SE' in pin attribute of cell 'SDFFR_X2' - skipping.
Warning: Found unsupported expression 'SE*SI+D*!SE' in pin attribute of cell 'SDFFS_X1' - skipping.
Warning: Found unsupported expression 'SE*SI+D*!SE' in pin attribute of cell 'SDFFS_X2' - skipping.
Warning: Found unsupported expression 'SE*SI+D*!SE' in pin attribute of cell 'SDFF_X1' - skipping.
Warning: Found unsupported expression 'SE*SI+D*!SE' in pin attribute of cell 'SDFF_X2' - skipping.
  final dff cell mappings:
    unmapped dff cell: $_DFF_N_
    \DFF_X1 _DFF_P_ (.CK( C), .D( D), .Q( Q), .QN(~Q));
    unmapped dff cell: $_DFF_NN0_
    unmapped dff cell: $_DFF_NN1_
    unmapped dff cell: $_DFF_NP0_
    unmapped dff cell: $_DFF_NP1_
    \DFFR_X1 _DFF_PN0_ (.CK( C), .D( D), .Q( Q), .QN(~Q), .RN( R));
    \DFFS_X1 _DFF_PN1_ (.CK( C), .D( D), .Q( Q), .QN(~Q), .SN( R));
    unmapped dff cell: $_DFF_PP0_
    unmapped dff cell: $_DFF_PP1_
    unmapped dff cell: $_DFFSR_NNN_
    unmapped dff cell: $_DFFSR_NNP_
    unmapped dff cell: $_DFFSR_NPN_
    unmapped dff cell: $_DFFSR_NPP_
    \DFFRS_X1 _DFFSR_PNN_ (.CK( C), .D( D), .Q( Q), .QN(~Q), .RN( R), .SN( S));
    unmapped dff cell: $_DFFSR_PNP_
    unmapped dff cell: $_DFFSR_PPN_
    unmapped dff cell: $_DFFSR_PPP_

7.1. Executing DFFLEGALIZE pass (convert FFs to types supported by the target).
Mapping DFF cells in module `$paramod$7c4142ec5efe02ac2b641912058d7ad3c8e770b6\MuxKey':
Mapping DFF cells in module `$paramod$c44997bd4209540e6eefebce7e7612707e0ddf71\MuxKeyInternal':
Mapping DFF cells in module `\top':

8. Executing OPT pass (performing simple optimizations).

8.1. Executing OPT_EXPR pass (perform const folding).
Optimizing module $paramod$7c4142ec5efe02ac2b641912058d7ad3c8e770b6\MuxKey.
Optimizing module $paramod$c44997bd4209540e6eefebce7e7612707e0ddf71\MuxKeyInternal.
Optimizing module top.

8.2. Executing OPT_MERGE pass (detect identical cells).
Finding identical cells in module `$paramod$7c4142ec5efe02ac2b641912058d7ad3c8e770b6\MuxKey'.
Finding identical cells in module `$paramod$c44997bd4209540e6eefebce7e7612707e0ddf71\MuxKeyInternal'.
Finding identical cells in module `\top'.
Removed a total of 0 cells.

8.3. Executing OPT_MUXTREE pass (detect dead branches in mux trees).
Running muxtree optimizer on module $paramod$7c4142ec5efe02ac2b641912058d7ad3c8e770b6\MuxKey..
  Creating internal representation of mux trees.
  No muxes found in this module.
Running muxtree optimizer on module $paramod$c44997bd4209540e6eefebce7e7612707e0ddf71\MuxKeyInternal..
  Creating internal representation of mux trees.
  No muxes found in this module.
Running muxtree optimizer on module \top..
  Creating internal representation of mux trees.
  No muxes found in this module.
Removed 0 multiplexer ports.

8.4. Executing OPT_REDUCE pass (consolidate $*mux and $reduce_* inputs).
  Optimizing cells in module $paramod$7c4142ec5efe02ac2b641912058d7ad3c8e770b6\MuxKey.
  Optimizing cells in module $paramod$c44997bd4209540e6eefebce7e7612707e0ddf71\MuxKeyInternal.
  Optimizing cells in module \top.
Performed a total of 0 changes.

8.5. Executing OPT_MERGE pass (detect identical cells).
Finding identical cells in module `$paramod$7c4142ec5efe02ac2b641912058d7ad3c8e770b6\MuxKey'.
Finding identical cells in module `$paramod$c44997bd4209540e6eefebce7e7612707e0ddf71\MuxKeyInternal'.
Finding identical cells in module `\top'.
Removed a total of 0 cells.

8.6. Executing OPT_DFF pass (perform DFF optimizations).

8.7. Executing OPT_CLEAN pass (remove unused cells and wires).
Finding unused cells or wires in module $paramod$7c4142ec5efe02ac2b641912058d7ad3c8e770b6\MuxKey..
Finding unused cells or wires in module $paramod$c44997bd4209540e6eefebce7e7612707e0ddf71\MuxKeyInternal..
Finding unused cells or wires in module \top..

8.8. Executing OPT_EXPR pass (perform const folding).
Optimizing module $paramod$7c4142ec5efe02ac2b641912058d7ad3c8e770b6\MuxKey.
Optimizing module $paramod$c44997bd4209540e6eefebce7e7612707e0ddf71\MuxKeyInternal.
Optimizing module top.

8.9. Finished OPT passes. (There is nothing left to do.)

9. Executing ABC pass (technology mapping using ABC).

9.1. Extracting gate netlist of module `$paramod$7c4142ec5efe02ac2b641912058d7ad3c8e770b6\MuxKey' to `/tmp/yosys-abc-ovL0dZ/input.blif'..
Extracted 0 gates and 0 wires to a netlist network with 0 inputs and 0 outputs.
Don't call ABC as there is nothing to map.
Removing temp directory.

9.2. Extracting gate netlist of module `$paramod$c44997bd4209540e6eefebce7e7612707e0ddf71\MuxKeyInternal' to `/tmp/yosys-abc-BLKX7f/input.blif'..
Extracted 26 gates and 44 wires to a netlist network with 18 inputs and 2 outputs.

9.2.1. Executing ABC.
Running ABC command: "/usr/local/bin/yosys-abc" -s -f /tmp/yosys-abc-BLKX7f/abc.script 2>&1
ABC: ABC command line: "source /tmp/yosys-abc-BLKX7f/abc.script".
ABC: 
ABC: + read_blif /tmp/yosys-abc-BLKX7f/input.blif 
ABC: + read_lib -w /home/jinghanhui/yosys-sta/scripts/../nangate45/lib/merged.lib 
ABC: Parsing finished successfully.  Parsing time =     0.03 sec
ABC: Scl_LibertyReadGenlib() skipped cell "fakeram45_1024x32" without logic function.
ABC: Scl_LibertyReadGenlib() skipped cell "fakeram45_2048x39" without logic function.
ABC: Scl_LibertyReadGenlib() skipped cell "fakeram45_256x34" without logic function.
ABC: Scl_LibertyReadGenlib() skipped cell "fakeram45_256x95" without logic function.
ABC: Scl_LibertyReadGenlib() skipped cell "fakeram45_256x96" without logic function.
ABC: Scl_LibertyReadGenlib() skipped cell "fakeram45_32x64" without logic function.
ABC: Scl_LibertyReadGenlib() skipped cell "fakeram45_512x64" without logic function.
ABC: Scl_LibertyReadGenlib() skipped cell "fakeram45_64x15" without logic function.
ABC: Scl_LibertyReadGenlib() skipped cell "fakeram45_64x21" without logic function.
ABC: Scl_LibertyReadGenlib() skipped cell "fakeram45_64x32" without logic function.
ABC: Scl_LibertyReadGenlib() skipped cell "fakeram45_64x7" without logic function.
ABC: Scl_LibertyReadGenlib() skipped cell "fakeram45_64x96" without logic function.
ABC: Scl_LibertyReadGenlib() skipped cell "ANTENNA_X1" due to dont_use attribute.
ABC: Scl_LibertyReadGenlib() skipped cell "CLKGATETST_X1" without logic function.
ABC: Scl_LibertyReadGenlib() skipped cell "CLKGATETST_X2" without logic function.
ABC: Scl_LibertyReadGenlib() skipped cell "CLKGATETST_X4" without logic function.
ABC: Scl_LibertyReadGenlib() skipped cell "CLKGATETST_X8" without logic function.
ABC: Scl_LibertyReadGenlib() skipped cell "CLKGATE_X1" without logic function.
ABC: Scl_LibertyReadGenlib() skipped cell "CLKGATE_X2" without logic function.
ABC: Scl_LibertyReadGenlib() skipped cell "CLKGATE_X4" without logic function.
ABC: Scl_LibertyReadGenlib() skipped cell "CLKGATE_X8" without logic function.
ABC: Scl_LibertyReadGenlib() skipped sequential cell "DFFRS_X1".
ABC: Scl_LibertyReadGenlib() skipped sequential cell "DFFRS_X2".
ABC: Scl_LibertyReadGenlib() skipped sequential cell "DFFR_X1".
ABC: Scl_LibertyReadGenlib() skipped sequential cell "DFFR_X2".
ABC: Scl_LibertyReadGenlib() skipped sequential cell "DFFS_X1".
ABC: Scl_LibertyReadGenlib() skipped sequential cell "DFFS_X2".
ABC: Scl_LibertyReadGenlib() skipped sequential cell "DFF_X1".
ABC: Scl_LibertyReadGenlib() skipped sequential cell "DFF_X2".
ABC: Scl_LibertyReadGenlib() skipped sequential cell "DLH_X1".
ABC: Scl_LibertyReadGenlib() skipped sequential cell "DLH_X2".
ABC: Scl_LibertyReadGenlib() skipped sequential cell "DLL_X1".
ABC: Scl_LibertyReadGenlib() skipped sequential cell "DLL_X2".
ABC: Scl_LibertyReadGenlib() skipped cell "FILLCELL_X2" due to dont_use attribute.
ABC: Scl_LibertyReadGenlib() skipped cell "FILLCELL_X4" due to dont_use attribute.
ABC: Scl_LibertyReadGenlib() skipped cell "FILLCELL_X8" due to dont_use attribute.
ABC: Scl_LibertyReadGenlib() skipped cell "FILLCELL_X32" due to dont_use attribute.
ABC: Scl_LibertyReadGenlib() skipped cell "LOGIC0_X1" due to dont_use attribute.
ABC: Scl_LibertyReadGenlib() skipped cell "LOGIC1_X1" due to dont_use attribute.
ABC: Scl_LibertyReadGenlib() skipped sequential cell "SDFFRS_X1".
ABC: Scl_LibertyReadGenlib() skipped sequential cell "SDFFRS_X2".
ABC: Scl_LibertyReadGenlib() skipped sequential cell "SDFFR_X1".
ABC: Scl_LibertyReadGenlib() skipped sequential cell "SDFFR_X2".
ABC: Scl_LibertyReadGenlib() skipped sequential cell "SDFFS_X1".
ABC: Scl_LibertyReadGenlib() skipped sequential cell "SDFFS_X2".
ABC: Scl_LibertyReadGenlib() skipped sequential cell "SDFF_X1".
ABC: Scl_LibertyReadGenlib() skipped sequential cell "SDFF_X2".
ABC: Scl_LibertyReadGenlib() skipped three-state cell "TBUF_X1".
ABC: Scl_LibertyReadGenlib() skipped three-state cell "TBUF_X2".
ABC: Scl_LibertyReadGenlib() skipped three-state cell "TBUF_X4".
ABC: Scl_LibertyReadGenlib() skipped three-state cell "TBUF_X8".
ABC: Scl_LibertyReadGenlib() skipped three-state cell "TBUF_X16".
ABC: Scl_LibertyReadGenlib() skipped three-state cell "TINV_X1".
ABC: Scl_LibertyReadGenlib() skipped sequential cell "TLAT_X1".
ABC: Library "nangate45_merged" from "/home/jinghanhui/yosys-sta/scripts/../nangate45/lib/merged.lib" has 88 cells (47 skipped: 21 seq; 6 tri-state; 20 no func; 7 dont_use).  Time =     0.05 sec
ABC: Memory =   11.42 MB. Time =     0.05 sec
ABC: Warning: Detected 2 multi-output gates (for example, "FA_X1").
ABC: + strash 
ABC: + ifraig 
ABC: + retime -D -D 2000.0 -M 6 
ABC: + strash 
ABC: + dch -f 
ABC: + map -p -M 1 -D 2000.0 -f 
ABC: + topo 
ABC: + dnsize 
ABC: + buffer -p 
ABC: + upsize 
ABC: + 
ABC: + write_blif /tmp/yosys-abc-BLKX7f/output.blif 

9.2.2. Re-integrating ABC results.
ABC RESULTS:          XNOR2_X2 cells:        8
ABC RESULTS:          NAND3_X1 cells:        8
ABC RESULTS:          NAND4_X1 cells:        2
ABC RESULTS:        internal signals:       24
ABC RESULTS:           input signals:       18
ABC RESULTS:          output signals:        2
Removing temp directory.

9.3. Extracting gate netlist of module `\top' to `/tmp/yosys-abc-tnuCcu/input.blif'..
Extracted 0 gates and 0 wires to a netlist network with 0 inputs and 0 outputs.
Don't call ABC as there is nothing to map.
Removing temp directory.

10. Executing HILOMAP pass (mapping to constant drivers).

11. Executing SETUNDEF pass (replace undef values with defined constants).

12. Executing SPLITNETS pass (splitting up multi-bit signals).

13. Executing INSBUF pass (insert buffer cells for connected wires).
Add $paramod$c44997bd4209540e6eefebce7e7612707e0ddf71\MuxKeyInternal/$auto$insbuf.cc:97:execute$236: \lut [2] -> $abc$210$lut[2]
Add $paramod$c44997bd4209540e6eefebce7e7612707e0ddf71\MuxKeyInternal/$auto$insbuf.cc:97:execute$237: \key [0] -> $abc$210$key[0]
Add $paramod$c44997bd4209540e6eefebce7e7612707e0ddf71\MuxKeyInternal/$auto$insbuf.cc:97:execute$238: \lut [3] -> $abc$210$lut[3]
Add $paramod$c44997bd4209540e6eefebce7e7612707e0ddf71\MuxKeyInternal/$auto$insbuf.cc:97:execute$239: \key [1] -> $abc$210$key[1]
Add $paramod$c44997bd4209540e6eefebce7e7612707e0ddf71\MuxKeyInternal/$auto$insbuf.cc:97:execute$240: \lut [0] -> $abc$210$lut[0]
Add $paramod$c44997bd4209540e6eefebce7e7612707e0ddf71\MuxKeyInternal/$auto$insbuf.cc:97:execute$241: \lut [6] -> $abc$210$lut[6]
Add $paramod$c44997bd4209540e6eefebce7e7612707e0ddf71\MuxKeyInternal/$auto$insbuf.cc:97:execute$242: \lut [7] -> $abc$210$lut[7]
Add $paramod$c44997bd4209540e6eefebce7e7612707e0ddf71\MuxKeyInternal/$auto$insbuf.cc:97:execute$243: \lut [4] -> $abc$210$lut[4]
Add $paramod$c44997bd4209540e6eefebce7e7612707e0ddf71\MuxKeyInternal/$auto$insbuf.cc:97:execute$244: \lut [10] -> $abc$210$lut[10]
Add $paramod$c44997bd4209540e6eefebce7e7612707e0ddf71\MuxKeyInternal/$auto$insbuf.cc:97:execute$245: \lut [11] -> $abc$210$lut[11]
Add $paramod$c44997bd4209540e6eefebce7e7612707e0ddf71\MuxKeyInternal/$auto$insbuf.cc:97:execute$246: \lut [8] -> $abc$210$lut[8]
Add $paramod$c44997bd4209540e6eefebce7e7612707e0ddf71\MuxKeyInternal/$auto$insbuf.cc:97:execute$247: \lut [14] -> $abc$210$lut[14]
Add $paramod$c44997bd4209540e6eefebce7e7612707e0ddf71\MuxKeyInternal/$auto$insbuf.cc:97:execute$248: \lut [15] -> $abc$210$lut[15]
Add $paramod$c44997bd4209540e6eefebce7e7612707e0ddf71\MuxKeyInternal/$auto$insbuf.cc:97:execute$249: \lut [12] -> $abc$210$lut[12]
Add $paramod$c44997bd4209540e6eefebce7e7612707e0ddf71\MuxKeyInternal/$auto$insbuf.cc:97:execute$250: $abc$210$out[0] -> \out [0]
Add $paramod$c44997bd4209540e6eefebce7e7612707e0ddf71\MuxKeyInternal/$auto$insbuf.cc:97:execute$251: \lut [1] -> $abc$210$lut[1]
Add $paramod$c44997bd4209540e6eefebce7e7612707e0ddf71\MuxKeyInternal/$auto$insbuf.cc:97:execute$252: \lut [5] -> $abc$210$lut[5]
Add $paramod$c44997bd4209540e6eefebce7e7612707e0ddf71\MuxKeyInternal/$auto$insbuf.cc:97:execute$253: \lut [9] -> $abc$210$lut[9]
Add $paramod$c44997bd4209540e6eefebce7e7612707e0ddf71\MuxKeyInternal/$auto$insbuf.cc:97:execute$254: \lut [13] -> $abc$210$lut[13]
Add $paramod$c44997bd4209540e6eefebce7e7612707e0ddf71\MuxKeyInternal/$auto$insbuf.cc:97:execute$255: $abc$210$out[1] -> \out [1]

14. Executing OPT_CLEAN pass (remove unused cells and wires).
Finding unused cells or wires in module $paramod$7c4142ec5efe02ac2b641912058d7ad3c8e770b6\MuxKey..
Finding unused cells or wires in module $paramod$c44997bd4209540e6eefebce7e7612707e0ddf71\MuxKeyInternal..
Finding unused cells or wires in module \top..
Removed 0 unused cells and 24 unused wires.
<suppressed ~1 debug messages>

15. Executing CHECK pass (checking for obvious problems).
Checking module $paramod$7c4142ec5efe02ac2b641912058d7ad3c8e770b6\MuxKey...
Warning: Wire $paramod$7c4142ec5efe02ac2b641912058d7ad3c8e770b6\MuxKey.$auto$hilomap.cc:47:hilomap_worker$230 is used but has no driver.
Checking module $paramod$c44997bd4209540e6eefebce7e7612707e0ddf71\MuxKeyInternal...
Warning: Wire $paramod$c44997bd4209540e6eefebce7e7612707e0ddf71\MuxKeyInternal.\out [1] is used but has no driver.
Warning: Wire $paramod$c44997bd4209540e6eefebce7e7612707e0ddf71\MuxKeyInternal.\out [0] is used but has no driver.
Checking module top...
Warning: Wire top.$auto$hilomap.cc:47:hilomap_worker$234 is used but has no driver.
Warning: Wire top.$auto$hilomap.cc:39:hilomap_worker$232 is used but has no driver.
Found and reported 5 problems.

16. Printing statistics.

=== $paramod$7c4142ec5efe02ac2b641912058d7ad3c8e770b6\MuxKey ===

   Number of wires:                  4
   Number of wire bits:             21
   Number of public wires:           3
   Number of public wire bits:      20
   Number of ports:                  3
   Number of port bits:             20
   Number of memories:               0
   Number of memory bits:            0
   Number of processes:              0
   Number of cells:                  2
     $paramod$c44997bd4209540e6eefebce7e7612707e0ddf71\MuxKeyInternal      1
     LOGIC0_X1                       1

   Area for cell type $paramod$c44997bd4209540e6eefebce7e7612707e0ddf71\MuxKeyInternal is unknown!

   Chip area for module '$paramod$7c4142ec5efe02ac2b641912058d7ad3c8e770b6\MuxKey': 0.532000
     of which used for sequential elements: 0.000000 (0.00%)

=== $paramod$c44997bd4209540e6eefebce7e7612707e0ddf71\MuxKeyInternal ===

   Number of wires:                 40
   Number of wire bits:             58
   Number of public wires:           4
   Number of public wire bits:      22
   Number of ports:                  4
   Number of port bits:             22
   Number of memories:               0
   Number of memory bits:            0
   Number of processes:              0
   Number of cells:                 38
     BUF_X1                         20
     NAND3_X1                        8
     NAND4_X1                        2
     XNOR2_X2                        8

   Chip area for module '$paramod$c44997bd4209540e6eefebce7e7612707e0ddf71\MuxKeyInternal': 48.412000
     of which used for sequential elements: 0.000000 (0.00%)

=== top ===

   Number of wires:                  5
   Number of wire bits:             14
   Number of public wires:           3
   Number of public wire bits:      12
   Number of ports:                  3
   Number of port bits:             12
   Number of memories:               0
   Number of memory bits:            0
   Number of processes:              0
   Number of cells:                  3
     $paramod$7c4142ec5efe02ac2b641912058d7ad3c8e770b6\MuxKey      1
     LOGIC0_X1                       1
     LOGIC1_X1                       1

   Area for cell type $paramod$7c4142ec5efe02ac2b641912058d7ad3c8e770b6\MuxKey is unknown!

   Chip area for module '\top': 1.064000
     of which used for sequential elements: 0.000000 (0.00%)

=== design hierarchy ===

   top                               1
     $paramod$7c4142ec5efe02ac2b641912058d7ad3c8e770b6\MuxKey      1
       $paramod$c44997bd4209540e6eefebce7e7612707e0ddf71\MuxKeyInternal      1

   Number of wires:                 49
   Number of wire bits:             93
   Number of public wires:          10
   Number of public wire bits:      54
   Number of ports:                 10
   Number of port bits:             54
   Number of memories:               0
   Number of memory bits:            0
   Number of processes:              0
   Number of cells:                 41
     BUF_X1                         20
     LOGIC0_X1                       2
     LOGIC1_X1                       1
     NAND3_X1                        8
     NAND4_X1                        2
     XNOR2_X2                        8

   Chip area for top module '\top': 50.008000
     of which used for sequential elements: 0.000000 (0.00%)

17. Executing Verilog backend.
Dumping module `$paramod$7c4142ec5efe02ac2b641912058d7ad3c8e770b6\MuxKey'.
Dumping module `$paramod$c44997bd4209540e6eefebce7e7612707e0ddf71\MuxKeyInternal'.
Dumping module `\top'.

Warnings: 13 unique messages, 77 total
End of script. Logfile hash: 12a9c17a4f, CPU: user 0.18s system 0.01s, MEM: 34.38 MB peak
Yosys 0.44+20 (git sha1 5fb3c0b1d, clang++ 14.0.0-1ubuntu1.1 -fPIC -O3)
Time spent: 40% 2x abc (0 sec), 18% 1x dfflibmap (0 sec), ...
